high >
# Path Traversal - http://localhost:8099/advertisement/addNew/1
parametri: kidsSeats, max_price, mileage, mileageLimit, min_price, rating, startDate
zanimljivo endDate nije samo je startDate
opis napada:
The Path Traversal attack technique allows an attacker access to files, directories, and commands that potentially reside outside the web document root directory. An attacker may manipulate a URL in such a way that the web site will execute or reveal the contents of arbitrary files anywhere on the web server. 
Any device that exposes an HTTP-based interface is potentially vulnerable to Path Traversal.
Most web sites restrict user access to a specific portion of the file-system, typically called the "web document root" or "CGI root" directory. 
These directories contain the files intended for user access and the executable necessary to drive web application functionality. 
To access files or execute commands anywhere on the file-system, Path Traversal attacks will utilize the ability of special-characters sequences.
resava se validacijom
kada stavi + u city to prolazi, generalno prolaze specijalni karakteri, mozda proveravati grad samo na slova
proveriti city u carAd

# SQL INJECTION
predlog kako resiti: Do not trust client side input, even if there is client side validation in place.  
In general, type check all data on the server side.
If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'
If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.
If database Stored Procedures can be used, use them.
Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality!
Do not create dynamic SQL queries using simple string concatenation.
Escape all data received from the client.
Apply a 'whitelist' of allowed characters, or a 'blacklist' of disallowed characters in user input.
Apply the principle of least privilege by using the least privileged database user possible.
In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.
Grant the minimum database access that is necessary for the application.
parametar: city
http://localhost:8099/advertisement/search?startDate=1593380700000&endDate=1593749160000&city=ns+AND+1%3D1+--+
obratiti pažnju: ne mora da se koristi eksplicitno == > < i sl, već njihovi ascii kodovi i napad će bit uspesan!


medium > 
# X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks. SOLVED
# http://localhost:8099/auth/login Access-Control-Allow-Origin: * Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) 
misconfiguration on the web server SOLVED

# XSS REFLEKTOVANI
parametri: endDate, kidsSeats, mileage, mileageLimit, startDate
izvrsen napad: <script>alert(1);</script>
i ova polja treba eskejpovati na obe strane, preporuka je onaj encoder koji koristimo, ali mislim da ga koristimo samo za string polja, treba za sve

# Buffer Overflow
opis: Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, 
segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way. 
kako spreciti: Rewrite the background program using proper return length checking
pogodjeni parametri: carClass, city, fuel, gearbox, make, model, state

low > 
# The cache-control and pragma HTTP header have not been set properly or are missing allowing the browser and proxies to cache content.
# The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing 
on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. 
Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.
