#Spring DataSource
spring.datasource.driverClassName=org.postgresql.Driver

spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://${DATABASE_DOMAIN:localhost}:${DATABASE_PORT:5432}/${DATABASE_DB:microservices}?currentSchema=${DATABASE_SCHEMA:advertisement}
spring.datasource.username=${DATABASE_USER:postgres}
spring.datasource.password=${DATABASE_PASSWORD:admin}

#spring.datasource.data = classpath:/data-postgres.sql

#JPA-Hibernate
spring.jpa.show-sql = true

#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = update

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow
#optimizacija za postgres upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

# TLS
#server.ssl.algorithm=${TLS_VERSION:TLSv1.2}
#server.ssl.key-store=${KEYSTORE:classpath:advertisement.keystore.p12}
#server.ssl.key-store-password=${KEYSTORE_PASSWORD:password}
#server.ssl.key-alias=${KEYSTORE_ALIAS:advertisement}
#server.ssl.trust-store=${TRUSTSTORE:classpath:advertisement.truststore.p12}
#server.ssl.trust-store-password=${TRUSTSTORE_PASSWORD:password}
#server.ssl.enabled=true
#server.ssl.client-auth=want
